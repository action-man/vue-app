/*--------------------------------------------------*\
  =Mixins
\*--------------------------------------------------*/

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}


@mixin overlay {
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 9;
  background-color: rgba(0, 0, 0, .5);
  visibility: hidden;
  opacity: 0;
  transition: opacity .4s, visibility .4s;
}


@mixin overlay-active {
  visibility: visible;
  opacity: 1;
}


@mixin mq(
  $from: false,
  $until: false,
  $and: false,
  $media-type: all
) {
  $min-width: 0;
  $max-width: 0;
  $media-query: '';

  // From: this breakpoint (inclusive)
  @if $from {
    @if type-of($from) == number {
      $min-width: $from;
    } @else {
      $min-width: bp($from);
    }
  }

  // Until: that breakpoint (exclusive)
  @if $until {
    @if type-of($until) == number {
      $max-width: $until;
    } @else {
      $max-width: bp($until) - 1px;
    }
  }


  @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }
  @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }
  @if $and            { $media-query: '#{$media-query} and #{$and}'; }

  // Remove unnecessary media query prefix 'all and '
  @if ($media-type == 'all' and $media-query != '') {
    $media-type: '';
    $media-query: str-slice(unquote($media-query), 6);
  }

  @media #{$media-type + $media-query} {
    @content;
  }

}